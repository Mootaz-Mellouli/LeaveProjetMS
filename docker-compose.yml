
services:

  leave-ms:
    container_name: leave-ms
    build:
      context: ./LeaveMS
      dockerfile: Dockerfile
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - SPRING_DATA_MONGODB_DATABASE=conge-db
      - SPRING_DATA_MONGODB_HOST=mongo-db
      - SPRING_DATA_MONGODB_PORT=27017
    ports:
      - "8085:8085"
    depends_on:
      - mongo-db
      - gateway
      - eureka-server
    networks:
      - my-network
  user-ms:
    container_name: user-ms
    build:
      context: ./UserMS
      dockerfile: Dockerfile
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db-1:3306/users?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
    ports:
      - "8081:8081"
    depends_on:
      - mysql-db
      - gateway
      - eureka-server
    networks:
      - my-network

  event-ms:
    container_name: event-ms
    build:
      context: ./EventMS
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - h2-db
      - gateway
      - eureka-server
    networks:
      - my-network
  team-ms:
    container_name: team-ms
    build:
      context: ./TeamMS
      dockerfile: Dockerfile
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql-db:5432/TeamDB
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=saif9782536
    ports:
      - "8088:8088"
    depends_on:
      - postgresql-db
      - gateway
      - eureka-server
    networks:
      - my-network
  claim-ms:
    container_name: claim-ms
    build:
      context: ./ClaimMS
      dockerfile: Dockerfile
    volumes:
      - .:/var/www
      - /var/www/var
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
      - DATABASE_URL=postgresql://mootaz@database:5432/claimdb
    ports:
      - "8079:8084"
    depends_on:
      - postgresql-db-2
      - gateway
      - eureka-server
    networks:
      - my-network
  eureka-server:
    container_name: eureka-server
    build:
      context: ./EurekaServer
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      - h2-db
    networks:
      - my-network
  mysql-db:
    container_name: mysql-db
    image: mysql:5.6
    ports:
      - "3306:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: leavemsdb
    networks:
      - my-network
  mysql-db-1:
    container_name: mysql-db-1
    image: mysql:5.6
    ports:
      - "3304:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: users
    networks:
      - my-network
  h2-db:
    container_name: h2-db
    image: openjdk:17
    ports:
      - "8084:8084"
    environment:
      - SPRING_H2_CONSOLE_ENABLED=true
    networks:
      - my-network
  postgresql-db:
    container_name: postgresql-db
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: saif9782536
      POSTGRES_DB: TeamDB
    networks:
      - my-network
  postgresql-db-2:
    container_name: postgresql-db-2
    image: postgres:latest
    ports:
      - "5430:5432"
    environment:
      POSTGRES_USER: mootaz
      POSTGRES_PASSWORD:
      POSTGRES_DB: claimdb
    networks:
      - my-network
  mongo-db:
    container_name: mongo-db
    image: mongo:latest
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_DATABASE=conge-db
      
    networks:
      - my-network
  gateway:
    container_name: gateway
    build:
      context: ./Gateway
      dockerfile: Dockerfile
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
    ports:
      - "8086:8086"
    depends_on:
      - eureka-server
    networks:
      - my-network
  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycl0ak
      POSTGRES_USER: keycl0ak
      POSTGRES_PASSWORD: password
    ports:
      - 5431:5431

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.1
   
    command:
      - "-b 0.0.0.0 -Dkeycloak.import=./keycloak.json"
      - start-dev
      - --import-realm
      - -Dkeycloak.migration.realmName
    volumes:
      - ./keycloack.json:/opt/keycloak/data/import/realm.json
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycl0ak
      DB_USER: keycl0ak
      DB_PASSWORD: password
      KEYCLOAK_USER: administrat0r
      KEYCLOAK_PASSWORD: asc88a8c0ssssqs
    ports:
      - 9090:8080
    depends_on:
      - postgres

volumes:
    postgres_data:
      driver: local
networks:
  my-network:
    driver: bridge